const glob = require('glob')
const fs = require('node:fs')
import { join } from 'path'
import { resolve } from 'path'
import { exportDeployments } from '../utils/manifest'
import { Manifest } from '../types'
import { generateSolidity } from 'abi-to-sol'
// @ts-ignore
import prettierSolidity from "prettier-plugin-solidity";
const prettier = require("prettier");

export interface GenerateSolInterfaceArgs {
    manifest: string,
    name: string
}

export async function generateSolInterface(argv: GenerateSolInterfaceArgs) {
    const { manifest: manifestPath, name: contractName } = argv
    const manifest = require(resolve(manifestPath)) as Manifest

    // Load the ABI from the manifest.
    const contract = manifest.vendor[contractName]
    if (!contract) {
        throw new Error(`No contract with name ${contractName} found in manifest`)
    }

    // Convert to Solidity.
    const code1 = generateSolidity({
        name: contractName,
        abi: contract.abi,
        solidityVersion: "^0.8.20",
        prettifyOutput: true
        // mode: "full",
        // outputAttribution,
        // outputSource
    });

    const code2 = prettier.format(code1, {
        plugins: [prettierSolidity],
        parser: "solidity-parse",
    });

    // Remove some ugly stuff:
    // (1) remove trailing ABI JSON.
    let code3 = code2.split("// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:")[0]
    // (2) replace the autogenerated notice with something more informative.
    code3 = code3
        .replace("// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. SEE SOURCE BELOW. !!", "// This file was autogenerated by Niacin, using abi-to-sol.")

    // Output the Solidity code to console.
    console.log(code3)
}